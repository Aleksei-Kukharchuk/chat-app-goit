{"version":3,"sources":["components/chat/socket.js","components/message/message.js","components/send/send.js","components/chat/chat.js","reportWebVitals.js","index.js"],"names":["socket","io","process","Message","msg","currentUser","classDependUser","user","className","text","Send","onChange","onSend","value","onSubmit","type","Chat","state","isLogin","users","message","messages","changeMessage","event","setState","target","changeName","inputName","emit","sendMessage","preventDefault","trim","length","this","on","newMessages","shift","map","key","Object","values","placeholder","id","htmlFor","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7c7f11f.chunk.js","sourcesContent":["import io from \"socket.io-client\";\r\nconst URL = process.env.REACT_APP_URL || \"localhost:5000\";\r\nexport const socket = io(URL);\r\n","import \"./message.css\";\r\n\r\nconst Message = ({ msg, currentUser }) => {\r\n  const classDependUser =\r\n    msg.user === currentUser ? \"alert alert-primary\" : \"alert alert-dark\";\r\n  return (\r\n    <div className=\"message-container\">\r\n      <span className={classDependUser}>\r\n        {msg.user}: {msg.text}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","const Send = ({ onChange, onSend, value }) => {\r\n  return (\r\n    <form className=\"input-group mb-3\" onSubmit={onSend}>\r\n      <input className=\"form-control\" value={value} onChange={onChange} />\r\n      <button className=\"btn btn-primary\" type=\"submit\">\r\n        Отправить\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Send;\r\n","import React, { Component } from \"react\";\r\nimport { socket } from \"./socket\";\r\nimport Message from \"../message\";\r\nimport Send from \"../send\";\r\nimport \"./chat.css\";\r\n\r\nclass Chat extends Component {\r\n  socket = socket;\r\n  state = {\r\n    currentUser: \"\",\r\n    isLogin: false,\r\n    users: {},\r\n    message: \"\",\r\n    messages: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.socket.on(\"message\", (msg) => {\r\n      if (this.state.isLogin) {\r\n        this.setState(({ messages }) => {\r\n          const newMessages = [...messages];\r\n          if (newMessages.length > 10) {\r\n            newMessages.shift();\r\n          }\r\n          return {\r\n            messages: [...newMessages, { user: msg.user, text: msg.message }],\r\n          };\r\n        });\r\n      }\r\n    });\r\n    this.socket.on(\"users\", (users) => {\r\n      this.setState({ users });\r\n    });\r\n  }\r\n\r\n  changeMessage = (event) => {\r\n    this.setState({ message: event.target.value });\r\n  };\r\n\r\n  changeName = (event) => {\r\n    this.setState({ currentUser: event.target.value });\r\n  };\r\n\r\n  inputName = () => {\r\n    const user = this.state.currentUser;\r\n    if (user !== \"\") {\r\n      this.setState({ isLogin: true });\r\n      this.socket.emit(\"change:name\", user);\r\n    }\r\n  };\r\n  sendMessage = (event) => {\r\n    event.preventDefault();\r\n    const { currentUser, message } = this.state;\r\n    if (message.trim().length) {\r\n      this.socket.emit(\"message\", {\r\n        user: currentUser,\r\n        message: message.trim(),\r\n      });\r\n      this.setState({ message: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    const { isLogin, currentUser, message, messages, users } = this.state;\r\n    if (!isLogin) {\r\n      return (\r\n        <main className=\"form-signin\">\r\n          <h4 className=\"form-floating mb-3\">Пожалуйста представьтесь,</h4>\r\n          <div className=\"form-floating mb-3\">\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Введите ваш никнейм\"\r\n              id=\"floatingInput\"\r\n              value={currentUser}\r\n              onChange={this.changeName}\r\n            />\r\n            <label htmlFor=\"floatingInput\">Nickname</label>\r\n          </div>\r\n          <button\r\n            className=\"w-100 btn btn-lg btn-primary\"\r\n            onClick={this.inputName}\r\n          >\r\n            Войти\r\n          </button>\r\n        </main>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"message-list col-md-9\">\r\n            <Send\r\n              value={message}\r\n              onChange={this.changeMessage}\r\n              onSend={this.sendMessage}\r\n            />\r\n            <div className=\"messages\">\r\n              {messages.map((msg, key) => (\r\n                <Message msg={msg} currentUser={currentUser} key={key} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <ul className=\"list-group col-md-3\">\r\n            {Object.values(users).map((user, key) => (\r\n              <li className=\"list-group-item\" key={key}>\r\n                {user}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/chat\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}